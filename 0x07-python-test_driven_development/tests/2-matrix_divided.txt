===============================
2-matrix_divided.py
===============================

Usage:
    The matrix_divided function takes two arguments
        a) matrix (list of lists) -> The matrix to be divided.
                     -> Must be a list of lists of integers/floats.
                     -> Each row of the matrix must have the same size.
        b) div (int or float) -> The number to divide by.
                     -> Must not be zero.

Tests:
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 0))
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
>>> print(matrix_divided([[1, 2, 3], [4, 5, 6, 7]], 3))
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size
>>> print(matrix_divided([ [1, 2, 3], [4, 5, 6, "str"]], 3))
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size
>>> print(matrix_divided([ [1, 2, 3], [4, 5, "str"]], 3))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> print(matrix_divided([[1, 2, 3], [4, 5, 5.5]], 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 1.83]]
>>> print(matrix_divided([[1, 2, 3.3], [4, 5, 5.5]], 3))
[[0.33, 0.67, 1.1], [1.33, 1.67, 1.83]]
>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], "str"))
Traceback (most recent call last):
...
TypeError: div must be a number
